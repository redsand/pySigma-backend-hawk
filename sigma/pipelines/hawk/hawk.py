from sigma.pipelines.common import logsource_windows, windows_logsource_mapping
from sigma.processing.transformations import AddConditionTransformation, FieldMappingTransformation, DetectionItemFailureTransformation, RuleFailureTransformation, SetStateTransformation
from sigma.processing.conditions import LogsourceCondition, IncludeFieldCondition, ExcludeFieldCondition, RuleProcessingItemAppliedCondition
from sigma.processing.pipeline import ProcessingItem, ProcessingPipeline

# TODO: the following code is just an example extend/adapt as required.
# See https://sigmahq-pysigma.readthedocs.io/en/latest/Processing_Pipelines.html for further documentation.

def hawk_pipeline() -> ProcessingPipeline:        
    return ProcessingPipeline(
        name="hawk pipeline",
        allowed_backends=frozenset("hawk"),      
        priority=20, 
        items=
        [
            ProcessingItem(
                identifier=f"hawk_windows_{service}",
                transformation=AddConditionTransformation({ "source": source}),
                rule_conditions=[logsource_windows(service)],
            )
            for service, source in windows_logsource_mapping.items()
        ] +
        [
            ProcessingItem(     # Field mappings
                identifier="hawk_field_mapping",
                transformation=FieldMappingTransformation({
                    "EventID": "vendor_id", 
                    "dst": "ip_dst_host",
                    "dst_ip": "ip_dst",
                    "src": "ip_src_host",
                    "src_ip": "ip_src",
                    "IPAddress": "ip_src",
                    "DNSAddress": "dns_address",
                    "DCIPAddress": "ip_src",
                    "category": "vendor_category",
                    "error": "error_code",
                    "key": "event_key",
                    "payload": "event_payload",
                    "weight": "event_weight",
                    "account type": "account_type",
                    "PrivilegeList": "process_privileges",
                    "pid_user": "event_username",
                    "sid": "correlation_session_id",
                    "UserSid": "correlation_session_id",
                    "TargetSid": "target_session_id",
                    "TargetUsername": "target_username",
                    "SamAccountName": "target_username",
                    "AccountName": "target_username",
                    "TargetDomainName": "target_domain",
                    "DnsServerIpAddress": "dns_address",
                    "QueryName": "dns_query",
                    "AuthenticationPackageName": "package_name",
                    "HostProcess": "image",
                    "Application": "image",
                    "ProcessName": "image",
                    "TargetImage": "target_image",
                    "ParentImage": "parent_image",
                    "CallerProcessName": "parent_image",
                    "ParentProcessName": "parent_image",
                    "CommandLine": "command",
                    "ProcessCommandLine": "command",
                    "ParentCommandLine": "parent_command",
                    "Imphash": "file_hash_imphash",
                    "IMPHASH": "file_hash_imphash",
                    "sha256": "file_hash_sha256",
                    "md5": "file_hash_md5",
                    "sha1": "file_hash_sha1",
                    "SubjectUserSid": "correlation_session_id",
                    "SubjectSid": "correlation_session_id",
                    "SubjectUserName": "correlation_username",
                    "SubjectDomainName": "correlation_domain",
                    "SubjectLogonId": "correlation_logon_id",
                    "pid": "event_pid",
                    "ProccessId": "pid",
                    "NewProcessName": "image",
                    "ServiceName": "service_name",
                    "Service": "service_name",
                    "ServiceFileName": "filename",
                    "SourceImage": "parent_image",
                    "ImageLoaded": "image_loaded",
                    "Description": "image_description",
                    "ScriptBlockText": "value",
                    "Product": "image_product",
                    "Company": "image_company",
                    "CurrentDirectory": "path",
                    "ShareName": "path",
                    "RelativeTargetName": "filename",
                    "TargetName": "value",
                    "Initiated": "value",
                    "Accesses": "access_mask",
                    "LDAPDisplayName": "distinguished_name",
                    "AttributeLDAPDisplayName": "distinguished_name",
                    "AttributeValue": "value",
                    "ParentProcessId": "parent_pid",
                    "SourceProcessId": "source_pid",
                    "TargetProcessId": "target_pid",
                    "Signed": "signature",
                    "Status": "value",
                    "TargetFilename": "filename",
                    "FileName": "filename",
                    "TargetObject": "object_target",
                    "ObjectClass": "object_type",
                    "ObjectValueName": "object_name",
                    "ObjectName": "object_name",
                    "DeviceClassName": "object_name",
                    "CallTrace": "calltrace",
                    "IpAddress": "ip_src",
                    "WorkstationName": "ip_src_host",
                    "Workstation": "ip_src_host",
                    "DestinationIp": "ip_dst",
                    "DestinationHostname": "ip_dst_host",
                    "DestinationPort": "ip_dport",
                    "DestAddress": "ip_dst",
                    "DestPort": "ip_dport",
                    "SourceAddress": "ip_src",
                    "SourcePort": "ip_sport",
                    "GrantedAccess": "access_mask",
                    "StartModule": "target_process_name",
                    "TargetProcessAddress": "process_address",
                    "TicketOptions": "sys.ticket.options",
                    "TicketEncryptionType": "sys.ticket.encryption.type",
                    "DetectionSource": "value",
                    "Priority": "event_priority",
                    "event_type_id": "vendor_id",
                    "destination.port": "ip_dport",
                    "user": "correlation_username",
                    "User": "correlation_username",
                    "c-referer": "http_referer",
                    "cs-referer": "http_referer",
                    "cs-host": "http_host",
                    "cs-method": "http_method",
                    "c-uri": "http_path",
                    "c-uri-stem": "http_path",
                    "cs-uri": "http_path",
                    "cs-uri-stem": "http_path",
                    "c-agent": "http_user_agent",
                    "cs-agent": "http_user_agent",
                    "c-useragent": "http_user_agent",
                    "cs-useragent": "http_user_agent",
                    "cs-user-agent": "http_user_agent",
                    "c-ip": "ip_src",
                    "cs-ip": "ip_src",
                    "s-ip": "ip_dst",
                    "sc-ip": "ip_dst",
                    "c-username": "correlation_username",
                    "cs-username": "correlation_username",
                    "s-computername": "ip_dst_host",
                    "cs-uri-query": "http_query",
                    "c-uri-query": "http_query",
                    "sc-status": "http_status_code",
                    "sc-bytes": "http_content_length",
                    "user-agent": "http_user_agent",
                    "cs-User-Agent": "http_user_agent",
                    "r-dns": "http_host",
                    "id.orig_h": "ip_src",
                    "id.orig_p": "ip_sport",
                    "id.resp_h": "ip_dst",
                    "id.resp_p": "ip_dport",
                    "host": "ip_src",
                    "hostname": "ip_src_host",
                    "port_num": "ip_dport",
                    "dst_port": "ip_dport",
                    "query": "dns_query",
                    "orig_ip_bytes": "net_if_out_bytes",
                    "resp_ip_bytes": "net_if_in_bytes",
                    "QNAME": "qname",
                    "Channel": "event_channel"
                })
            )
        ],
    )
